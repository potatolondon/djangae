workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH'
    - if: '$CI_COMMIT_TAG'

include:
  - template: Jobs/Dependency-Scanning.latest.gitlab-ci.yml
  - template: Jobs/SAST.latest.gitlab-ci.yml
  - template: Jobs/Code-Quality.gitlab-ci.yml
  - template: Jobs/Secret-Detection.latest.gitlab-ci.yml

code_quality:
  artifacts:
    paths: [gl-code-quality-report.json]

stages:
 - prepare
 - lint
 - test
 - publish

.prepare-image:
  image: docker:latest
  stage: prepare
  interruptible: true
  services:
    - docker:dind
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE:$IMAGE || true
    - docker build --cache-from $CI_REGISTRY_IMAGE:$IMAGE -t $CI_REGISTRY_IMAGE:$IMAGE -f ./docker_images/$IMAGE.dockerfile .
    - echo $CI_REGISTRY_IMAGE
    - docker push $CI_REGISTRY_IMAGE:$IMAGE
  rules:
      - if: $CI_PIPELINE_SOURCE == "merge_request_event"
        changes:
          - docker_images/*

prepare:python3.10:
  extends: .prepare-image
  variables:
    IMAGE: python3.10

prepare:python3.11:
  extends: .prepare-image
  variables:
    IMAGE: python3.11

prepare:python3.12:
  extends: .prepare-image
  variables:
    IMAGE: python3.12

lint:python3:
  image: $CI_REGISTRY_IMAGE:python3.12
  stage: lint
  script:
    - tox -e flake8

test:pages:
  image: python:3.12
  stage: test
  needs: []  # We can execute this out-of-order
  before_script:
  - pip install mkdocs>=1.1.2
  script:
  - mkdir -p test
  - mkdocs build --strict --verbose --site-dir test
  artifacts:
    paths:
    - test
  except:
  - master

test:python3.10:django4.2:
 image: $CI_REGISTRY_IMAGE:python3.10
 stage: test
 before_script:
   - source /root/google-cloud-sdk/path.bash.inc
 script:
   - tox -e py310-dj42 -- --settings=settings.test_settings

test:python3.10:django5.0:
 image: $CI_REGISTRY_IMAGE:python3.10
 stage: test
 before_script:
   - source /root/google-cloud-sdk/path.bash.inc
 script:
   - tox -e py310-dj50 -- --settings=settings.test_settings

test:python3.10:django5.1:
 allow_failure: true  # Until gcloudc supports it
 image: $CI_REGISTRY_IMAGE:python3.10
 stage: test
 before_script:
   - source /root/google-cloud-sdk/path.bash.inc
 script:
   - tox -e py310-dj51 -- --settings=settings.test_settings

test:python3.10:django5.2:
 allow_failure: true  # Until gcloudc supports it
 image: $CI_REGISTRY_IMAGE:python3.10
 stage: test
 before_script:
   - source /root/google-cloud-sdk/path.bash.inc
 script:
   - tox -e py310-dj52 -- --settings=settings.test_settings

test:python3.11:django4.2:
 image: $CI_REGISTRY_IMAGE:python3.11
 stage: test
 before_script:
   - source /root/google-cloud-sdk/path.bash.inc
 script:
   - tox -e py311-dj42 -- --settings=settings.test_settings

test:python3.11:django5.0:
 image: $CI_REGISTRY_IMAGE:python3.11
 stage: test
 before_script:
   - source /root/google-cloud-sdk/path.bash.inc
 script:
   - tox -e py311-dj50 -- --settings=settings.test_settings

test:python3.11:django5.1:
 allow_failure: true  # Until gcloudc supports it
 image: $CI_REGISTRY_IMAGE:python3.11
 stage: test
 before_script:
   - source /root/google-cloud-sdk/path.bash.inc
 script:
   - tox -e py311-dj51 -- --settings=settings.test_settings

test:python3.11:django5.2:
 allow_failure: true  # Until gcloudc supports it
 image: $CI_REGISTRY_IMAGE:python3.11
 stage: test
 before_script:
   - source /root/google-cloud-sdk/path.bash.inc
 script:
   - tox -e py311-dj52 -- --settings=settings.test_settings

test:python3.12:django4.2:
 image: $CI_REGISTRY_IMAGE:python3.12
 stage: test
 before_script:
   - source /root/google-cloud-sdk/path.bash.inc
 script:
   - tox -e py312-dj42 -- --settings=settings.test_settings

test:python3.12:django5.0:
 image: $CI_REGISTRY_IMAGE:python3.12
 stage: test
 before_script:
   - source /root/google-cloud-sdk/path.bash.inc
 script:
   - tox -e py312-dj50 -- --settings=settings.test_settings

test:python3.12:django5.1:
 allow_failure: true  # Until gcloudc supports it
 image: $CI_REGISTRY_IMAGE:python3.12
 stage: test
 before_script:
   - source /root/google-cloud-sdk/path.bash.inc
 script:
   - tox -e py312-dj51 -- --settings=settings.test_settings

test:python3.12:django5.2:
 allow_failure: true  # Until gcloudc supports it
 image: $CI_REGISTRY_IMAGE:python3.12
 stage: test
 before_script:
   - source /root/google-cloud-sdk/path.bash.inc
 script:
   - tox -e py312-dj52 -- --settings=settings.test_settings

build and publish:
  stage: publish
  image: python:3.12
  rules:
    - if: $CI_COMMIT_TAG
      when: manual
  before_script:
    - pip install twine setuptools wheel
    - rm -rf dist
    - python setup.py sdist bdist_wheel
  script:
    - python -m twine upload --username=__token__ --password=$PROD_PYPI_TOKEN --repository-url https://upload.pypi.org/legacy/ dist/*

pages:
  image: python:3.12
  stage: publish
  needs: []
  before_script:
  - pip install mkdocs>=1.1.2
  script:
  - mkdir -p public
  - mkdocs build --strict --verbose
  artifacts:
    paths:
    - public
  rules:
    - if: '$CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH'
